{
    "default": {
        "id": "default",
        "next": "default2",
        "backend": "default",
        "scripts": [
            "s = \"{}\"",
            "",
            "send_key(s)"
        ],
        "imports": [],
        "hints": [
            {
                "type": "txt",
                "data": "WOW!!! The key is {}"
            }
        ]
    },
    "default2": {
        "id": "default2",
        "next": "default",
        "backend": "default",
        "scripts": [
            "s = \"{}\"",
            "",
            "send_key(s)"
        ],
        "imports": [],
        "hints": [
            {
                "type": "txt",
                "data": "WOW!!! The key is not {}"
            }
        ]
    },
    "0_the_basics": {
        "id": "0_the_basics",
        "next": "1_halfed",
        "backend": "0_the_basics",
        "scripts": [
            "# Welcome to PickleBreak. Learn a large component",
            "# of python functions and libraries by resolving challenges.",
            "# The goal is to retrieve a 64-key like this one:",
            "# {}",
            "# Pressing reset will regenerate all key-based elements",
            "# whereas execute will reset and run your code.",
            " ",
            "# To send your answer, just call send_key like:",
            "# send_key(key)",
            "# Here, just try it, the key is right there.",
            "s = \"{}\"",
            ""
        ],
        "imports": [],
        "hints": [
            {
                "type": "txt",
                "data": "Level 0: The Basics."
            },
            {
                "type": "img",
                "data": "./loaded/0_pic.jpg"
            }
        ]
    },
    "1_halfed": {
        "id": "1_halfed",
        "next": "2_hex",
        "backend": "1_halfed",
        "scripts": [
            "# Can you get this one?",
            "h1 = \"{}\"",
            "h2 = \"{}\"",
            ""
        ],
        "imports": [],
        "hints": [
            {
                "type": "txt",
                "data": "Level 1: Halfed."
            },
            {
                "type": "img",
                "data": "./loaded/1_pic.jpg"
            }
        ]
    },
    "2_hex": {
        "id": "2_hex",
        "next": "3_reversed",
        "backend": "2_hex",
        "scripts": [
            "# Now it's an integer ...",
            "h = {}",
            ""
        ],
        "imports": [],
        "hints": [
            {
                "type": "txt",
                "data": "Level 2: Hex."
            },
            {
                "type": "img",
                "data": "./loaded/2_pic.jpg"
            }
        ]
    },
    "3_reversed": {
        "id": "3_reversed",
        "next": "caesar",
        "backend": "3_reversed",
        "scripts": [
            "# Reversed?",
            "h = \"{}\"",
            ""
        ],
        "imports": [],
        "hints": [
            {
                "type": "txt",
                "data": "Level 3: Reversed."
            }, {
                "type": "img",
                "data": "./loaded/1_pic.jpg"
            }
        ]
    },
    "html0": {
        "id": "html0",
        "next": "html1",
        "backend": "html0",
        "scripts": [
            "from http import client",
            "h = client.HTTPConnection(\"{}:{}\")",
            ""
        ],
        "imports": [
            "http.client"
        ],
        "hints": [
            {
                "type": "txt",
                "data": "Level 6: Basic web browser."
            },
            {
                "type": "img",
                "data": "./loaded/html0.jpg"
            }
        ]
    },
    "image_encode": {
        "id": "image_encode",
        "next": "evil_prime",
        "backend": "image_encode",
        "scripts": [
            "# Something might be hiden in those pickles",
            "from PIL import Image",
            "import numpy as np",
            "img = Image.open(\"./loaded/encoded.png\")",
            ""
        ],
        "imports": [
            "PIL.Image",
            "numpy"
        ],
        "hints": [
            {
                "type": "txt",
                "data": "Level 8: Encoded image."
            },
            {
                "type": "img",
                "data": "./loaded/encoded.png"
            },
            {
                "type": "txt",
                "data": "Wow those pickles look 10 times brighter than usual"
            }
        ]
    },
    "caesar": {
        "id": "caesar",
        "next": "pickle_origin",
        "backend": "caesar",
        "scripts": [
            "#This might be a great salad",
            "this = \"{}\"",
            ""
            ],
            "imports": [],
            "hints": [
                {
                    "type": "txt",
                    "data": "Level 4: What a mess"
                },
                {
                    "type": "img",
                    "data": "./loaded/caesar.jpg"
                }
            ]
        },
    "pickle_origin": {
        "id": "pickle_origin",
        "next": "html0",
        "backend": "pickle_origin",
        "scripts": [
            ""
        ],
        "imports": [
            "pickle"
        ],
        "hints": [
            {
                "type": "txt",
                "data": "Level 5: Pickle jar."
            },
            {
                "type": "img",
                "data": "./loaded/pickle.jpg"
            }
        ]
    },
    "html1": {
        "id": "html1",
        "next": "image_encode",
        "backend": "html1",
        "scripts": [
            "from http import client",
            "h = client.HTTPConnection(\"{}:{}\")",
            ""
        ],
        "imports": ["http.client"],
        "hints": [
            {
                "type": "txt",
                "data": "Level 7: Tree."
            },
            {
                "type": "img",
                "data": "./loaded/html1.jpg"
            }
        ]
    },
    "evil_prime": {
        "id": "evil_prime",
        "next": "",
        "backend": "evil_prime",
        "scripts": [
            "#Let's deal with the devil.",
            "#The key given is too evil, maybe try to reduce it?",
            "key = \"{}\"",
            ""
            ],
            "imports": [],
            "hints": [
                {
                    "type": "txt",
                    "data": "Level 9: The beasted prime."
                },
                {
                    "type": "txt",
                    "data": "Try to divide the key by the evilest prime number"
                },
                {
                    "type": "txt",
                    "data": "Just remember the initial key is an hexadecimal one"
                },
                {
                    "type": "img",
                    "data": "./loaded/evil_prime.png"
                }
            ]
        }
}
